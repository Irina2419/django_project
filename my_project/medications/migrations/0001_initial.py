# Generated by Django 5.2.3 on 2025-07-03 21:06

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BNFHierarchy',
            fields=[
                ('bnf_code_15digit', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('bnf_chapter_code', models.CharField(max_length=2)),
                ('bnf_chapter_name', models.CharField(max_length=255)),
                ('bnf_section_code', models.CharField(max_length=5)),
                ('bnf_section_name', models.CharField(max_length=255)),
                ('bnf_paragraph_code', models.CharField(max_length=7)),
                ('bnf_paragraph_name', models.CharField(max_length=255)),
                ('bnf_chemical_substance', models.CharField(max_length=255)),
                ('bnf_presentation_description', models.CharField(max_length=500)),
                ('bnf_version', models.CharField(max_length=50)),
                ('valid_from_date', models.DateField()),
                ('valid_to_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'BNF Hierarchy',
                'verbose_name_plural': 'BNF Hierarchies',
            },
        ),
        migrations.CreateModel(
            name='ChemicalComposition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chemical_name', models.CharField(max_length=255, unique=True)),
                ('chemical_description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Chemical Composition',
                'verbose_name_plural': 'Chemical Compositions',
            },
        ),
        migrations.CreateModel(
            name='MedicationProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=255)),
                ('latest_average_price_gbp', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('cost_effectiveness_status', models.CharField(blank=True, max_length=100, null=True)),
                ('bnf_code_15digit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='medication_products_bnf', to='medications.bnfhierarchy')),
                ('chemical_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='medication_products_chemical', to='medications.chemicalcomposition', to_field='chemical_name')),
            ],
            options={
                'verbose_name': 'Medication Product',
                'verbose_name_plural': 'Medication Products',
                'unique_together': {('product_name', 'bnf_code_15digit')},
            },
        ),
        migrations.CreateModel(
            name='MedicationPricingHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=255)),
                ('price_gbp', models.DecimalField(decimal_places=2, max_digits=10)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('usage_estimate', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('price_change_measure', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pricing_history', to='medications.medicationproduct')),
            ],
            options={
                'verbose_name': 'Medication Pricing History',
                'verbose_name_plural': 'Medication Pricing Histories',
                'ordering': ['-period_start'],
            },
        ),
        migrations.CreateModel(
            name='CostEffectivenessAppraisal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nice_guidance_id', models.CharField(blank=True, max_length=100, null=True)),
                ('recommendation_status', models.CharField(max_length=100)),
                ('icer_gbp_per_qaly', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('appraisal_date', models.DateField()),
                ('summary_of_findings', models.TextField(blank=True, null=True)),
                ('rationale_for_decision', models.TextField(blank=True, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cost_effectiveness_appraisals', to='medications.medicationproduct')),
            ],
            options={
                'verbose_name': 'Cost Effectiveness Appraisal',
                'verbose_name_plural': 'Cost Effectiveness Appraisals',
                'ordering': ['-appraisal_date'],
            },
        ),
    ]
